S -> 
constantDeclaration -> IDENTIFIER = expression hintdirectives ;
constantDeclaration -> IDENTIFIER = expression hintdirectives ; constantDeclaration
typedConstantDeclaration -> IDENTIFIER : type = typedConstant hintdirective ;
typedConstantDeclaration -> IDENTIFIER : type = typedConstant hintdirective ;
typedConstant -> constant
typedConstant -> addressConstant
typedConstant -> arrayConstant
typedConstant -> recordConstant
typedConstant -> proceduralConstant
typeDeclaration -> IDENTIFIER = type hintdirectivesOrNull ;
hintdirectivesOrNull -> 
hintdirectivesOrNull -> hintdirectives
expression 
hintdirectives
type -> simpleType
type -> stringType
type -> structuredType
type -> pointerType
type -> proceduralType
type -> genericType
type -> specializedType
type -> typealias
simpleType -> ordinalType
simpleType -> realType
stringType
structuredType
pointerType
proceduralType
genericType
specializedType
typealias
ordinalType -> Integer
ordinalType -> Shortint
ordinalType -> SmallInt
ordinalType -> Longint
ordinalType -> Longword
ordinalType -> Int64
ordinalType -> Byte
ordinalType -> Word
ordinalType -> Cardinal
ordinalType -> QWord
ordinalType -> ByteBool
ordinalType -> WordBool
ordinalType -> LongBool
ordinalType -> QWordBool
realType -> realTypeIdentifier
realTypeIdentifier
enumeratedType -> ( enumeratedTypeOption )
enumeratedTypeOption -> identifierList 
enumeratedTypeOption -> identifierList , enumeratedTypeOption
enumeratedTypeOption -> assignedEnumList
enumeratedTypeOption -> assignedEnumList , enumeratedTypeOption
identifierList

assignedEnumList -> IDENTIFIER := expression
assignedEnumList -> IDENTIFIER := expression , assignedEnumList
assignedEnumList -> IDENTIFIER = expression , assignedEnumList

subrange -> typeConstant .. constant
typeConstant
constant

stringType -> STRING unsignedIntegerOrNull
unsignedIntegerOrNull -> 
unsignedIntegerOrNull -> [ unsignedInteger ]
stringType -> TYPE STRING ( unsignedInteger )
stringType -> TYPE ANSISTRING ( unsignedInteger )

structuredType -> arrayType
structuredType -> recordType
structuredType -> objectType
structuredType -> classType
structuredType -> class referenceType
structuredType -> interfaceType
structuredType -> setType
structuredType -> fileType

arrayType -> typePackedOrNull ARRAY ordinalTypeOrNull OF type
typePackedOrNull -> 
typePackedOrNull -> PACKED
typePackedOrNull -> BITPACKED
ordinalTypeOrNull -> [ ordinalTypeList ]
ordinalTypeList -> ordinalType
ordinalTypeList -> ordinalType , ordinalTypeList

recordType -> typePackedOrNull RECORD fieldList END
fieldList -> fieldListPart commaOrNull
fieldListPart -> fixedFields
fieldListPart -> fixedFieldsOrNull variantPart
fixedFieldsOrNull ->
fixedFieldsOrNull -> fixedFields COMMA
commaOrNull -> 
commaOrNull -> COMMA

fixedFields -> identifierList : type 
fixedFields -> identifierList : type ; fixedFields

variantPart -> CASE identifierColon ordinalType variantList
identifierColon -> 
identifierColon -> IDENTIFIER :
variantList -> variant 
variantList -> variant ; variantList

variant -> constantList : ( fieldListOrNull )
constantList -> constant 
constantList -> constant , constantList
fieldListOrNull -> 
fieldListOrNull -> fieldList

setType -> SET OF ordinalType

fileType -> file ofTypeIdentifierOrNull
ofTypeIdentifierOrNull -> 
ofTypeIdentifierOrNull -> OF typeIdentifier 

pointerType -> Ë† type typeIdentifier

typeIdentifier

proceduralType -> functionHeader ofIsOrNull commaCallModifiers
proceduralType -> procedureHeader ofIsOrNull commaCallModifiers
ofIsOrNull -> 
ofIsOrNull -> OF OBJECT
ofIsOrNull -> IS NESTED
commaCallModifiers -> ; callModifiers

functionHeader -> FUNCTION formalParameterList : resultType
procedureHeader -> PROCEDURE formalParameterList
callModifiers -> REGISTER
callModifiers -> CDECL
callModifiers -> PASCAL
callModifiers -> STDCALL
callModifiers -> SAFECALL
callModifiers -> INLINE

typeAlias -> typeOrNull IDENTIFIER
typeOrNull ->
typeOrNull -> type

variableDeclaration -> identifier : type equalExpressionOrNull variableModifiersOrNull HINT_DIRECTIVE ;
equalExpressionOrNull -> 
equalExpressionOrNull -> = expression
variableModifiersOrNull -> 
variableModifiersOrNull -> variableModifiers

variableModifiersList -> variableModifiers  
variableModifiersList -> variableModifiers variableModifiersList 
variableModifiers -> ABSOLUTE integerExpressionOrIdentifier 
integerExpressionOrIdentifier -> integerExpression
integerExpressionOrIdentifier -> IDENTIFIER
variableModifiers -> ; EXPORT
variableModifiers -> ; CVAR
variableModifiers -> ; EXTERNAL stringConstantOrNull nameStringConstantOrNull
stringConstantOrNull -> 
stringConstantOrNull -> stringConstant
nameStringConstantOrNull -> 
nameStringConstantOrNull -> NAME stringConstant
variableModifiers -> HINT_DIRECTIVE

propertyDefinition -> identifier propertyInterfaceOrNull propertySpecifiers
propertyInterfaceOrNull -> 
propertyInterfaceOrNull -> propertyInterface
propertyInterface -> propertyParameterListOrNull : typeIdentifier indexIntegerconstantOrNull
propertyParameterListOrNull -> 
propertyParameterListOrNull -> propertyParameterList
propertyParameterList -> [ parameterDeclarationList ]
parameterDeclarationList -> parameterDeclaration
parameterDeclarationList -> parameterDeclaration ; parameterDeclarationList
indexIntegerconstantOrNull ->
indexIntegerconstantOrNull -> INDEX integerconstant
propertySpecifiers -> readSpecifierOrNull 
readSpecifierOrNull -> 
readSpecifierOrNull -> READ fieldOrFunction
propertySpecifiers -> writeSpecifierOrNull 
writeSpecifierOrNull ->  
writeSpecifierOrNull -> WRITE fieldOrProcedure
propertySpecifiers -> defaultSpecifierOrNull 
defaultSpecifierOrNull -> 
defaultSpecifierOrNull -> defaultSpecifier
defaultSpecifier -> DEFAULT constantOrNull
constantOrNull -> 
constantOrNull -> constant
defaultSpecifier -> NODEFAULT
fieldOrProcedure -> fieldIdentifier 
fieldOrProcedure -> procedureIdentifier 
fieldOrFunction -> fieldIdentifier
fieldOrFunction -> functionIdentifier

constant

<<<<<<< HEAD
objectTypes -> packedOrNull OBJECT abstractSealedOrNull heritageOrNull componentObjectList END
packedOrNull -> 
packedOrNull -> PACKED
abstractSealedOrNull ->
abstractSealedOrNull -> ABSTRACT 
abstractSealedOrNull -> SEALED
heritageOrNull ->
heritageOrNull -> heritage
componentObjectList -> objectVisibilitySpecifierOrNull constDefinitionListOrNull fieldDefinitionOrNull methodDefinitionOrNull
componentObjectList -> objectVisibilitySpecifierOrNull constDefinitionListOrNull componentObjectList
objectVisibilitySpecifierOrNull ->
objectVisibilitySpecifierOrNull -> objectVisibilitySpecifier
constDefinitionListOrNull -> 
constDefinitionListOrNull -> constDefinition
constDefinitionListOrNull -> constDefinition constDefinitionList
fieldDefinitionOrNull -> 
fieldDefinitionOrNull -> fieldDefinitionList 
fieldDefinitionList -> fieldDefinition 
fieldDefinitionList -> fieldDefinition fieldDefinitionList
methodDefinitionOrNull -> 
methodDefinitionOrNull -> methodDefinitionList
methodDefinitionList -> methodDefinition
methodDefinitionList -> methodDefinition methodDefinitionList
fieldDefinition -> classVarOrNull identifierList : type ; staticCommaOrNull
classVarOrNull -> 
classVarOrNull -> classOrNull VAR
classOrNull -> 
classOrNull -> CLASS 
staticCommaOrNull -> 
staticCommaOrNull -> STATIC ;
constDefinition -> CONST IDENTIFIER = constantDefinition ;
objectVisibilitySpecifier -> PRIVATE
objectVisibilitySpecifier -> PROTECTED
objectVisibilitySpecifier -> PUBLIC

constructorDeclaration -> constructorHeader ; subroutineBlock
destructorDeclaration -> destructorHeader ; subroutineBlock
constructorHeader -> CONSTRUCTOR identifierOrQualifiedMethodIdentifier formalParameterList
destructorHeader -> DESTRUCTOR identifierOrQualifiedMethodIdentifier formalParameterList
identifierOrQualifiedMethodIdentifier -> IDENTIFIER
identifierOrQualifiedMethodIdentifier -> qualifiedMethodIdentifier

methodDeclaration -> classOrNull methodDeclarationType ; methodDirectives
methodDeclarationType -> functionHeader 
methodDeclarationType -> procedureHeader
methodDeclarationType -> constructorHeader
methodDeclarationType -> destructorHeader
methodDirectives -> virtualCommaOrNull callModifiersCommaOrNull
virtualCommaOrNull -> VIRTUAL ; abstractCommaOrNull 
abstractCommaOrNull -> 
abstractCommaOrNull -> ABSTRACT ;
callModifiersCommaOrNull ->
callModifiersCommaOrNull -> callModifiers ;

classType -> classFowardDefinition 
classType -> classDefinition 
classFowardDefinition -> CLASS
classDefinition -> packedOrNull CLASS abstractSealedOrNull heritageOrNull componentListEndOrNull
componentListEndOrNull -> 
componentListEndOrNull -> componentClassList END 

heritage -> ( classTypeIdentifier implementedInterfacesOrNull )
implementedInterfacesOrNull ->
implementedInterfacesOrNull -> implementedInterfaces
implementedInterfaces -> colonInterfaceIdentifierList
colonInterfaceIdentifierList -> , InterfaceIdentifier
colonInterfaceIdentifierList -> , InterfaceIdentifier colonInterfaceIdentifierList
componentClassList -> classVisibilitySpecifierOrNull fieldDefinition componentClassDeclarationOrNullList
classVisibilitySpecifierOrNull ->
classVisibilitySpecifierOrNull -> classVisibilitySpecifier

componentClassDeclarationOrNull -> 
componentClassDeclarationOrNullList -> componentClassDeclarationList
componentClassDeclarationList -> constDeclarationPart componentClassDeclarationList
componentClassDeclarationList -> typeDeclarationPart componentClassDeclarationList
componentClassDeclarationList -> variableDeclarationPart componentClassDeclarationList
componentClassDeclarationList -> classVariableDeclarationPart componentClassDeclarationList
componentClassDeclarationList -> methodDeclaration componentClassDeclarationList
componentClassDeclarationList -> propertyDeclaration componentClassDeclarationList
classVariableDeclarationPart -> CLASS variableDeclarationPart
fieldDefinition -> identifierList : type ; staticCommaOrNull
methodDeclaration -> classOrNull methodDeclarationType ; auxPartMethodDeclarationOrNull callModifiersSemiColonOrNull
auxPartMethodDeclarationOrNull -> 
auxPartMethodDeclarationOrNull -> auxPartMethodDeclaration
auxPartMethodDeclaration -> virtualOrDynamic semicolonAbstractOrNull ;
auxPartMethodDeclaration -> OVERRIDE
auxPartMethodDeclaration -> MESSAGE integerOrStringConstant 
integerOrStringConstant -> integerConstant
integerOrStringConstant -> stringConstant 
virtualOrDynamic -> VIRTUAL 
virtualOrDynamic -> DYNAMIC
semicolonAbstractOrNull ->
semicolonAbstractOrNull -> ; ABSTRACT 
classVisibilitySpecifier -> strictOrNull privateOrProtected 
classVisibilitySpecifier -> PUBLIC
classVisibilitySpecifier -> PUBLISHED
strictOrNull -> 
strictOrNull -> STRICT 
privateOrProtected -> PRIVATE 
privateOrProtected -> PROTECTED
classOf -> classtType

propertyDefinition -> classOrNull PROPERTY IDENTIFIER propertyInterfaceOrNull propertySpecifiers HINT_DIRECTIVE
classOrNull -> 
classOrNull -> CLASS
propertyInterfaceOrNull ->
propertyInterfaceOrNull -> propertyInterface
propertyInterface -> propertyParameterListOrNull : typeIdentifier indexIntegerconstantNull
propertyParameterListOrNull ->
propertyParameterListOrNull -> propertyParameterList
indexIntegerconstantNull -> 
indexIntegerconstantNull -> INDEX integerconstant 
propertyParameterList -> [ parameterDeclarationSemicolonList ]
parameterDeclarationSemicolonList -> parameterDeclaration
parameterDeclarationSemicolonList -> parameterDeclaration ; parameterDeclarationSemicolonList
propertySpecifiers -> readSpecifierOrNull writeOrImplementsSpecifierOrNull defaultSpecifierOrNull storedSpecifierOrNull defaultarraypropertyspecifierOrNull
readSpecifierOrNull -> 
readSpecifierOrNull -> READ fieldOrMethod
writeOrImplementsSpecifierOrNull ->
writeOrImplementsSpecifierOrNull -> writeSpecifier
writeOrImplementsSpecifierOrNull -> implementsSpecifier
writeSpecifier -> WRITE fieldOrMethod
implementsSpecifier -> IMPLEMENTS identifierList
identifierList -> IDENTIFIER
identifierList -> IDENTIFIER , identifierList
fieldOrMethod -> fieldIdentifier 
fieldOrMethod -> methodIdentifier
defaultSpecifierOrNull -> 
defaultSpecifierOrNull -> defaultSpecifier
defaultSpecifier -> DEFAULT constantOrNull
defaultSpecifier -> NODEFAULT
constantOrNull -> 
constantOrNull -> constant
storedSpecifierOrNull -> 
storedSpecifierOrNull -> STORED constantOrIdentifier 
constantOrIdentifier -> constant
constantOrIdentifier -> IDENTIFIER
defaultarraypropertyspecifierOrNull -> 
defaultarraypropertyspecifierOrNull -> ; default

interface -> heritageOrNull guidOrNull componentListOrNull END
guidOrNull -> [â€™ GUID â€™]
componentListOrNull ->
componentListOrNull -> componentList
heritage -> ( interfaceTypeIdentifier )
componenteList -> methodDefinition 
componenteList -> methodDefinition componenteList
componenteList -> propertyDefinition 
componenteList -> propertyDefinition componenteList

genericType -> GENERIC IDENTIFIER < templateList > = genericType ;
templateList -> identifierList 
templateList -> identifierList ; templateList
identifierList -> identifier 
identifierList -> identifier , identifierList typeIdentifierOrNull 
typeIdentifierOrNull -> 
typeIdentifierOrNull -> : typeIdentifierListOrAlternative
typeIdentifierList -> typeIdentifier
typeIdentifierList -> typeIdentifier , typeIdentifierList
typeIdentifierList -> CLASS 
typeIdentifierList -> INTERFACE 
typeIdentifierList -> OBJECT 
typeIdentifierList -> RECORD 
genericType -> classType
genericType -> objectType
genericType -> interfaceType
genericType -> proceduralType
genericType -> recordType
genericType -> arrayType

specializedType -> SPECIALIZE IDENTIFIER < identifierList >

extendedRecordType -> packedOrNull record componentList END
packedOrNull -> 
packedOrNull -> PACKED
componentList -> componentList
componentList -> componentList componentList

component list -> recordVisibilitySpecifierOrNull fieldDefinitionOrNull recordMethodDefinitionOrNull propertyDefinitionOrNull recordoperatorDefinitionOrNull variantPart
recordVisibilitySpecifierOrNull ->
recordVisibilitySpecifierOrNull -> recordVisibilitySpecifier
fieldDefinitionOrNull ->
fieldDefinitionOrNull -> fieldDefinition
recordMethodDefinitionOrNull-> 
recordMethodDefinitionOrNull -> recordMethodDefinitionList 
recordMethodDefinitionList -> recordMethodDefinition 
recordMethodDefinitionList -> recordMethodDefinition recordMethodDefinitionList
recordMethodDefinitionOrNull-> 
recordMethodDefinitionOrNull -> recordMethodDefinitionList 
recordMethodDefinitionList -> recordMethodDefinition 
recordMethodDefinitionList -> recordMethodDefinition recordMethodDefinitionList
propertyDefinitionOrNull -> propertyDefinitionList
propertyDefinitionList -> propertyDefinition 
propertyDefinitionList -> propertyDefinition propertyDefinitionList
recordoperatorDefinitionOrNull ->
recordoperatorDefinitionOrNull -> recordoperatorDefinition
field definition -> identifierList : type ;
recordVisibilitySpecifier -> strictOrNull PRIVATE
recordVisibilitySpecifier -> PUBLIC
strictOrNull ->
strictOrNull -> STRICT 
recordMethodDefinition -> headerOptional : callModifiersOrNull
headerOptional -> functionHeader
headerOptional -> procedureHeader
callModifiersOrNull -> 
callModifiersOrNull -> callModifiers ;

recordOperatorDefinition -> CLASS operatorDefinition

/* pag149 Class, Record and Type helpers */
=======
/* pag 76 - objects */
>>>>>>> 85c52dc6d117f36276b4d5c8581f35804ff9c88d
