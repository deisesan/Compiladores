S -> program 
program -> programHeader SEMICOLON usesClause block DOT
programHeader -> PROGRAM IDENTIFIER programParameters
programParameters -> VAZIO
programParameters -> LEFT_PAREN identifierList RIGHT_PAREN 
usesClause -> VAZIO
usesClause -> USES clause SEMICOLON
clause -> IDENTIFIER
clause -> IDENTIFIER IN stringLiteral
clause -> IDENTIFIER IN stringLiteral COMMA clause
block -> declarationPart statementPart
declarationPart -> VAZIO
declarationPart -> labelDeclarationPart declarationPart
declarationPart -> constantDeclarationPart declarationPart
declarationPart -> resourcestringDeclarationPart declarationPart
declarationPart -> typeDeclarationPart declarationPart
declarationPart -> variableDeclarationPart declarationPart
declarationPart -> threadVariableDeclarationPart declarationPart
declarationPart -> procedureFunctionDeclarationPart declarationPart
labelDeclarationPart -> LABEL labelPart SEMICOLON
labelPart -> label 
labelPart -> label COMMA labelPart
constantDeclarationPart -> CONST constantPart
constantPart -> constantDeclaration
constantPart -> constantDeclaration constantPart
constantPart -> typedConstantDeclaration 
constantPart -> typedConstantDeclaration constantPart
typedConstantDeclaration -> IDENTIFIER : TYPE = typedConstant HINT_DIRECTIVE ;
typedConstantDeclaration -> IDENTIFIER : TYPE = typedConstant HINT_DIRECTIVE ; typedConstantDeclaration
constantDeclaration -> IDENTIFIER = expression HINT_DIRECTIVE ; 
constantDeclaration -> IDENTIFIER = expression HINT_DIRECTIVE ; constantDeclaration
resourcestringDeclarationPart -> RESOURCESTRING resourcestringPart
resourcestringPart -> stringConstantDeclaration
resourcestringPart -> stringConstantDeclaration resourcestringPart
typeDeclarationPart -> TYPE typePart
typePart -> typeDeclaration
typePart -> typeDeclaration typePart
typeDeclaration -> IDENTIFIER = type 
typeDeclaration -> IDENTIFIER = type HINT_DIRECTIVE ;
type -> simpleType
type -> stringType
type -> structuredType
type -> pointerType
type -> proceduralType
type -> genericType
type -> specializedType
type -> typeAlias
simpleType -> ordinalType
simpleType -> realType
realType -> realTypeIdentifier
ordinalType -> INTEGER 
ordinalType -> SHORTINT 
ordinalType -> SMALLINT 
ordinalType -> LONGINT 
ordinalType -> BYTE 
ordinalType -> WORD 
ordinalType -> CARDINAL 
ordinalType -> LONGWORD 
ordinalType -> QWORD 
ordinalType -> BYTEBOOL 
ordinalType -> WORDBOOL 
ordinalType -> LONGBOOL 
ordinalType -> QWORDBOOL 
variableDeclarationPart -> VAR variablePart
variablePart -> variableDeclaration
variablePart -> variableDeclaration variablePart
procedureFunctionDeclarationPart -> procedureDeclaration
procedureFunctionDeclarationPart -> procedureDeclaration procedureFunctionDeclarationPart
procedureFunctionDeclarationPart -> functionDeclaration
procedureFunctionDeclarationPart -> functionDeclaration procedureFunctionDeclarationPart
procedureFunctionDeclarationPart -> constructorDeclaration
procedureFunctionDeclarationPart -> constructorDeclaration procedureFunctionDeclarationPart
procedureFunctionDeclarationPart -> destructorDeclaration
procedureFunctionDeclarationPart -> destructorDeclaration procedureFunctionDeclarationPart
statementPart -> compoundStatement
compoundStatement -> BEGIN statementList END
statementList -> statement
statementList -> statement SEMICOLON statementList
statement -> 
variablePart -> variableDeclaration
variablePart -> variableDeclaration variablePart
variableDeclaration -> IDENTIFIER : TYPE expressionPart variableModifiersPart HINT_DIRECTIVE ;
expressionPart -> VAZIO
expressionPart -> = expression 
expression -> 
variableModifiersPart -> VAZIO
variableModifiersPart -> variableModifiers
variableModifiers -> ABSOLUTE integerExpression
variableModifiers -> ABSOLUTE integerExpression variableModifiers
variableModifiers -> ABSOLUTE IDENTIFIER 
variableModifiers -> ABSOLUTE IDENTIFIER variableModifiers
variableModifiers -> ; EXPORT 
variableModifiers -> ; EXPORT variableModifiers
variableModifiers -> ; CVAR 
variableModifiers -> ; CVAR variableModifiers
variableModifiers -> ; EXTERNAL externalPart namePart
variableModifiers -> ; EXTERNAL externalPart namePart variableModifiers
externalPart -> VAZIO
externalPart -> stringConstant
namePart -> VAZIO 
namePart -> NAME stringConstant
variableModifiers -> HINT_DIRECTIVE variableModifiers
identifierList -> IDENTIFIER 
identifierList -> IDENTIFIER COMMA identifierList